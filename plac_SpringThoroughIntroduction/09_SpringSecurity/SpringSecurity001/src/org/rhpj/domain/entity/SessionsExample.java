package org.rhpj.domain.entity;

import java.util.ArrayList;
import java.util.List;

public class SessionsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    public SessionsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNull() {
            addCriterion("USER_NAME is null");
            return (Criteria) this;
        }

        public Criteria andUserNameIsNotNull() {
            addCriterion("USER_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andUserNameEqualTo(String value) {
            addCriterion("USER_NAME =", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotEqualTo(String value) {
            addCriterion("USER_NAME <>", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThan(String value) {
            addCriterion("USER_NAME >", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameGreaterThanOrEqualTo(String value) {
            addCriterion("USER_NAME >=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThan(String value) {
            addCriterion("USER_NAME <", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLessThanOrEqualTo(String value) {
            addCriterion("USER_NAME <=", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameLike(String value) {
            addCriterion("USER_NAME like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotLike(String value) {
            addCriterion("USER_NAME not like", value, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameIn(List<String> values) {
            addCriterion("USER_NAME in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotIn(List<String> values) {
            addCriterion("USER_NAME not in", values, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameBetween(String value1, String value2) {
            addCriterion("USER_NAME between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andUserNameNotBetween(String value1, String value2) {
            addCriterion("USER_NAME not between", value1, value2, "userName");
            return (Criteria) this;
        }

        public Criteria andSessionStartIsNull() {
            addCriterion("SESSION_START is null");
            return (Criteria) this;
        }

        public Criteria andSessionStartIsNotNull() {
            addCriterion("SESSION_START is not null");
            return (Criteria) this;
        }

        public Criteria andSessionStartEqualTo(String value) {
            addCriterion("SESSION_START =", value, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andSessionStartNotEqualTo(String value) {
            addCriterion("SESSION_START <>", value, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andSessionStartGreaterThan(String value) {
            addCriterion("SESSION_START >", value, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andSessionStartGreaterThanOrEqualTo(String value) {
            addCriterion("SESSION_START >=", value, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andSessionStartLessThan(String value) {
            addCriterion("SESSION_START <", value, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andSessionStartLessThanOrEqualTo(String value) {
            addCriterion("SESSION_START <=", value, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andSessionStartLike(String value) {
            addCriterion("SESSION_START like", value, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andSessionStartNotLike(String value) {
            addCriterion("SESSION_START not like", value, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andSessionStartIn(List<String> values) {
            addCriterion("SESSION_START in", values, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andSessionStartNotIn(List<String> values) {
            addCriterion("SESSION_START not in", values, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andSessionStartBetween(String value1, String value2) {
            addCriterion("SESSION_START between", value1, value2, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andSessionStartNotBetween(String value1, String value2) {
            addCriterion("SESSION_START not between", value1, value2, "sessionStart");
            return (Criteria) this;
        }

        public Criteria andStatementIsNull() {
            addCriterion("STATEMENT is null");
            return (Criteria) this;
        }

        public Criteria andStatementIsNotNull() {
            addCriterion("STATEMENT is not null");
            return (Criteria) this;
        }

        public Criteria andStatementEqualTo(String value) {
            addCriterion("STATEMENT =", value, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementNotEqualTo(String value) {
            addCriterion("STATEMENT <>", value, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementGreaterThan(String value) {
            addCriterion("STATEMENT >", value, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementGreaterThanOrEqualTo(String value) {
            addCriterion("STATEMENT >=", value, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementLessThan(String value) {
            addCriterion("STATEMENT <", value, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementLessThanOrEqualTo(String value) {
            addCriterion("STATEMENT <=", value, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementLike(String value) {
            addCriterion("STATEMENT like", value, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementNotLike(String value) {
            addCriterion("STATEMENT not like", value, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementIn(List<String> values) {
            addCriterion("STATEMENT in", values, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementNotIn(List<String> values) {
            addCriterion("STATEMENT not in", values, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementBetween(String value1, String value2) {
            addCriterion("STATEMENT between", value1, value2, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementNotBetween(String value1, String value2) {
            addCriterion("STATEMENT not between", value1, value2, "statement");
            return (Criteria) this;
        }

        public Criteria andStatementStartIsNull() {
            addCriterion("STATEMENT_START is null");
            return (Criteria) this;
        }

        public Criteria andStatementStartIsNotNull() {
            addCriterion("STATEMENT_START is not null");
            return (Criteria) this;
        }

        public Criteria andStatementStartEqualTo(String value) {
            addCriterion("STATEMENT_START =", value, "statementStart");
            return (Criteria) this;
        }

        public Criteria andStatementStartNotEqualTo(String value) {
            addCriterion("STATEMENT_START <>", value, "statementStart");
            return (Criteria) this;
        }

        public Criteria andStatementStartGreaterThan(String value) {
            addCriterion("STATEMENT_START >", value, "statementStart");
            return (Criteria) this;
        }

        public Criteria andStatementStartGreaterThanOrEqualTo(String value) {
            addCriterion("STATEMENT_START >=", value, "statementStart");
            return (Criteria) this;
        }

        public Criteria andStatementStartLessThan(String value) {
            addCriterion("STATEMENT_START <", value, "statementStart");
            return (Criteria) this;
        }

        public Criteria andStatementStartLessThanOrEqualTo(String value) {
            addCriterion("STATEMENT_START <=", value, "statementStart");
            return (Criteria) this;
        }

        public Criteria andStatementStartLike(String value) {
            addCriterion("STATEMENT_START like", value, "statementStart");
            return (Criteria) this;
        }

        public Criteria andStatementStartNotLike(String value) {
            addCriterion("STATEMENT_START not like", value, "statementStart");
            return (Criteria) this;
        }

        public Criteria andStatementStartIn(List<String> values) {
            addCriterion("STATEMENT_START in", values, "statementStart");
            return (Criteria) this;
        }

        public Criteria andStatementStartNotIn(List<String> values) {
            addCriterion("STATEMENT_START not in", values, "statementStart");
            return (Criteria) this;
        }

        public Criteria andStatementStartBetween(String value1, String value2) {
            addCriterion("STATEMENT_START between", value1, value2, "statementStart");
            return (Criteria) this;
        }

        public Criteria andStatementStartNotBetween(String value1, String value2) {
            addCriterion("STATEMENT_START not between", value1, value2, "statementStart");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedIsNull() {
            addCriterion("CONTAINS_UNCOMMITTED is null");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedIsNotNull() {
            addCriterion("CONTAINS_UNCOMMITTED is not null");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedEqualTo(String value) {
            addCriterion("CONTAINS_UNCOMMITTED =", value, "containsUncommitted");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedNotEqualTo(String value) {
            addCriterion("CONTAINS_UNCOMMITTED <>", value, "containsUncommitted");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedGreaterThan(String value) {
            addCriterion("CONTAINS_UNCOMMITTED >", value, "containsUncommitted");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedGreaterThanOrEqualTo(String value) {
            addCriterion("CONTAINS_UNCOMMITTED >=", value, "containsUncommitted");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedLessThan(String value) {
            addCriterion("CONTAINS_UNCOMMITTED <", value, "containsUncommitted");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedLessThanOrEqualTo(String value) {
            addCriterion("CONTAINS_UNCOMMITTED <=", value, "containsUncommitted");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedLike(String value) {
            addCriterion("CONTAINS_UNCOMMITTED like", value, "containsUncommitted");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedNotLike(String value) {
            addCriterion("CONTAINS_UNCOMMITTED not like", value, "containsUncommitted");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedIn(List<String> values) {
            addCriterion("CONTAINS_UNCOMMITTED in", values, "containsUncommitted");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedNotIn(List<String> values) {
            addCriterion("CONTAINS_UNCOMMITTED not in", values, "containsUncommitted");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedBetween(String value1, String value2) {
            addCriterion("CONTAINS_UNCOMMITTED between", value1, value2, "containsUncommitted");
            return (Criteria) this;
        }

        public Criteria andContainsUncommittedNotBetween(String value1, String value2) {
            addCriterion("CONTAINS_UNCOMMITTED not between", value1, value2, "containsUncommitted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SESSIONS
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SESSIONS
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}