package org.rhpj.domain.entity;

import java.util.ArrayList;
import java.util.List;

public class SequencesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    public SequencesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSequenceCatalogIsNull() {
            addCriterion("SEQUENCE_CATALOG is null");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogIsNotNull() {
            addCriterion("SEQUENCE_CATALOG is not null");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogEqualTo(String value) {
            addCriterion("SEQUENCE_CATALOG =", value, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogNotEqualTo(String value) {
            addCriterion("SEQUENCE_CATALOG <>", value, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogGreaterThan(String value) {
            addCriterion("SEQUENCE_CATALOG >", value, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogGreaterThanOrEqualTo(String value) {
            addCriterion("SEQUENCE_CATALOG >=", value, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogLessThan(String value) {
            addCriterion("SEQUENCE_CATALOG <", value, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogLessThanOrEqualTo(String value) {
            addCriterion("SEQUENCE_CATALOG <=", value, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogLike(String value) {
            addCriterion("SEQUENCE_CATALOG like", value, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogNotLike(String value) {
            addCriterion("SEQUENCE_CATALOG not like", value, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogIn(List<String> values) {
            addCriterion("SEQUENCE_CATALOG in", values, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogNotIn(List<String> values) {
            addCriterion("SEQUENCE_CATALOG not in", values, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogBetween(String value1, String value2) {
            addCriterion("SEQUENCE_CATALOG between", value1, value2, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceCatalogNotBetween(String value1, String value2) {
            addCriterion("SEQUENCE_CATALOG not between", value1, value2, "sequenceCatalog");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaIsNull() {
            addCriterion("SEQUENCE_SCHEMA is null");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaIsNotNull() {
            addCriterion("SEQUENCE_SCHEMA is not null");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaEqualTo(String value) {
            addCriterion("SEQUENCE_SCHEMA =", value, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaNotEqualTo(String value) {
            addCriterion("SEQUENCE_SCHEMA <>", value, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaGreaterThan(String value) {
            addCriterion("SEQUENCE_SCHEMA >", value, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaGreaterThanOrEqualTo(String value) {
            addCriterion("SEQUENCE_SCHEMA >=", value, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaLessThan(String value) {
            addCriterion("SEQUENCE_SCHEMA <", value, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaLessThanOrEqualTo(String value) {
            addCriterion("SEQUENCE_SCHEMA <=", value, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaLike(String value) {
            addCriterion("SEQUENCE_SCHEMA like", value, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaNotLike(String value) {
            addCriterion("SEQUENCE_SCHEMA not like", value, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaIn(List<String> values) {
            addCriterion("SEQUENCE_SCHEMA in", values, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaNotIn(List<String> values) {
            addCriterion("SEQUENCE_SCHEMA not in", values, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaBetween(String value1, String value2) {
            addCriterion("SEQUENCE_SCHEMA between", value1, value2, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceSchemaNotBetween(String value1, String value2) {
            addCriterion("SEQUENCE_SCHEMA not between", value1, value2, "sequenceSchema");
            return (Criteria) this;
        }

        public Criteria andSequenceNameIsNull() {
            addCriterion("SEQUENCE_NAME is null");
            return (Criteria) this;
        }

        public Criteria andSequenceNameIsNotNull() {
            addCriterion("SEQUENCE_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andSequenceNameEqualTo(String value) {
            addCriterion("SEQUENCE_NAME =", value, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andSequenceNameNotEqualTo(String value) {
            addCriterion("SEQUENCE_NAME <>", value, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andSequenceNameGreaterThan(String value) {
            addCriterion("SEQUENCE_NAME >", value, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andSequenceNameGreaterThanOrEqualTo(String value) {
            addCriterion("SEQUENCE_NAME >=", value, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andSequenceNameLessThan(String value) {
            addCriterion("SEQUENCE_NAME <", value, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andSequenceNameLessThanOrEqualTo(String value) {
            addCriterion("SEQUENCE_NAME <=", value, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andSequenceNameLike(String value) {
            addCriterion("SEQUENCE_NAME like", value, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andSequenceNameNotLike(String value) {
            addCriterion("SEQUENCE_NAME not like", value, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andSequenceNameIn(List<String> values) {
            addCriterion("SEQUENCE_NAME in", values, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andSequenceNameNotIn(List<String> values) {
            addCriterion("SEQUENCE_NAME not in", values, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andSequenceNameBetween(String value1, String value2) {
            addCriterion("SEQUENCE_NAME between", value1, value2, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andSequenceNameNotBetween(String value1, String value2) {
            addCriterion("SEQUENCE_NAME not between", value1, value2, "sequenceName");
            return (Criteria) this;
        }

        public Criteria andCurrentValueIsNull() {
            addCriterion("CURRENT_VALUE is null");
            return (Criteria) this;
        }

        public Criteria andCurrentValueIsNotNull() {
            addCriterion("CURRENT_VALUE is not null");
            return (Criteria) this;
        }

        public Criteria andCurrentValueEqualTo(Long value) {
            addCriterion("CURRENT_VALUE =", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueNotEqualTo(Long value) {
            addCriterion("CURRENT_VALUE <>", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueGreaterThan(Long value) {
            addCriterion("CURRENT_VALUE >", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueGreaterThanOrEqualTo(Long value) {
            addCriterion("CURRENT_VALUE >=", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueLessThan(Long value) {
            addCriterion("CURRENT_VALUE <", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueLessThanOrEqualTo(Long value) {
            addCriterion("CURRENT_VALUE <=", value, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueIn(List<Long> values) {
            addCriterion("CURRENT_VALUE in", values, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueNotIn(List<Long> values) {
            addCriterion("CURRENT_VALUE not in", values, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueBetween(Long value1, Long value2) {
            addCriterion("CURRENT_VALUE between", value1, value2, "currentValue");
            return (Criteria) this;
        }

        public Criteria andCurrentValueNotBetween(Long value1, Long value2) {
            addCriterion("CURRENT_VALUE not between", value1, value2, "currentValue");
            return (Criteria) this;
        }

        public Criteria andIncrementIsNull() {
            addCriterion("INCREMENT is null");
            return (Criteria) this;
        }

        public Criteria andIncrementIsNotNull() {
            addCriterion("INCREMENT is not null");
            return (Criteria) this;
        }

        public Criteria andIncrementEqualTo(Long value) {
            addCriterion("INCREMENT =", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementNotEqualTo(Long value) {
            addCriterion("INCREMENT <>", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementGreaterThan(Long value) {
            addCriterion("INCREMENT >", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementGreaterThanOrEqualTo(Long value) {
            addCriterion("INCREMENT >=", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementLessThan(Long value) {
            addCriterion("INCREMENT <", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementLessThanOrEqualTo(Long value) {
            addCriterion("INCREMENT <=", value, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementIn(List<Long> values) {
            addCriterion("INCREMENT in", values, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementNotIn(List<Long> values) {
            addCriterion("INCREMENT not in", values, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementBetween(Long value1, Long value2) {
            addCriterion("INCREMENT between", value1, value2, "increment");
            return (Criteria) this;
        }

        public Criteria andIncrementNotBetween(Long value1, Long value2) {
            addCriterion("INCREMENT not between", value1, value2, "increment");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedIsNull() {
            addCriterion("IS_GENERATED is null");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedIsNotNull() {
            addCriterion("IS_GENERATED is not null");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedEqualTo(Boolean value) {
            addCriterion("IS_GENERATED =", value, "isGenerated");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedNotEqualTo(Boolean value) {
            addCriterion("IS_GENERATED <>", value, "isGenerated");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedGreaterThan(Boolean value) {
            addCriterion("IS_GENERATED >", value, "isGenerated");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("IS_GENERATED >=", value, "isGenerated");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedLessThan(Boolean value) {
            addCriterion("IS_GENERATED <", value, "isGenerated");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedLessThanOrEqualTo(Boolean value) {
            addCriterion("IS_GENERATED <=", value, "isGenerated");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedIn(List<Boolean> values) {
            addCriterion("IS_GENERATED in", values, "isGenerated");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedNotIn(List<Boolean> values) {
            addCriterion("IS_GENERATED not in", values, "isGenerated");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_GENERATED between", value1, value2, "isGenerated");
            return (Criteria) this;
        }

        public Criteria andIsGeneratedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_GENERATED not between", value1, value2, "isGenerated");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNull() {
            addCriterion("REMARKS is null");
            return (Criteria) this;
        }

        public Criteria andRemarksIsNotNull() {
            addCriterion("REMARKS is not null");
            return (Criteria) this;
        }

        public Criteria andRemarksEqualTo(String value) {
            addCriterion("REMARKS =", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotEqualTo(String value) {
            addCriterion("REMARKS <>", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThan(String value) {
            addCriterion("REMARKS >", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksGreaterThanOrEqualTo(String value) {
            addCriterion("REMARKS >=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThan(String value) {
            addCriterion("REMARKS <", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLessThanOrEqualTo(String value) {
            addCriterion("REMARKS <=", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksLike(String value) {
            addCriterion("REMARKS like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotLike(String value) {
            addCriterion("REMARKS not like", value, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksIn(List<String> values) {
            addCriterion("REMARKS in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotIn(List<String> values) {
            addCriterion("REMARKS not in", values, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksBetween(String value1, String value2) {
            addCriterion("REMARKS between", value1, value2, "remarks");
            return (Criteria) this;
        }

        public Criteria andRemarksNotBetween(String value1, String value2) {
            addCriterion("REMARKS not between", value1, value2, "remarks");
            return (Criteria) this;
        }

        public Criteria andCacheIsNull() {
            addCriterion("CACHE is null");
            return (Criteria) this;
        }

        public Criteria andCacheIsNotNull() {
            addCriterion("CACHE is not null");
            return (Criteria) this;
        }

        public Criteria andCacheEqualTo(Long value) {
            addCriterion("CACHE =", value, "cache");
            return (Criteria) this;
        }

        public Criteria andCacheNotEqualTo(Long value) {
            addCriterion("CACHE <>", value, "cache");
            return (Criteria) this;
        }

        public Criteria andCacheGreaterThan(Long value) {
            addCriterion("CACHE >", value, "cache");
            return (Criteria) this;
        }

        public Criteria andCacheGreaterThanOrEqualTo(Long value) {
            addCriterion("CACHE >=", value, "cache");
            return (Criteria) this;
        }

        public Criteria andCacheLessThan(Long value) {
            addCriterion("CACHE <", value, "cache");
            return (Criteria) this;
        }

        public Criteria andCacheLessThanOrEqualTo(Long value) {
            addCriterion("CACHE <=", value, "cache");
            return (Criteria) this;
        }

        public Criteria andCacheIn(List<Long> values) {
            addCriterion("CACHE in", values, "cache");
            return (Criteria) this;
        }

        public Criteria andCacheNotIn(List<Long> values) {
            addCriterion("CACHE not in", values, "cache");
            return (Criteria) this;
        }

        public Criteria andCacheBetween(Long value1, Long value2) {
            addCriterion("CACHE between", value1, value2, "cache");
            return (Criteria) this;
        }

        public Criteria andCacheNotBetween(Long value1, Long value2) {
            addCriterion("CACHE not between", value1, value2, "cache");
            return (Criteria) this;
        }

        public Criteria andMinValueIsNull() {
            addCriterion("MIN_VALUE is null");
            return (Criteria) this;
        }

        public Criteria andMinValueIsNotNull() {
            addCriterion("MIN_VALUE is not null");
            return (Criteria) this;
        }

        public Criteria andMinValueEqualTo(Long value) {
            addCriterion("MIN_VALUE =", value, "minValue");
            return (Criteria) this;
        }

        public Criteria andMinValueNotEqualTo(Long value) {
            addCriterion("MIN_VALUE <>", value, "minValue");
            return (Criteria) this;
        }

        public Criteria andMinValueGreaterThan(Long value) {
            addCriterion("MIN_VALUE >", value, "minValue");
            return (Criteria) this;
        }

        public Criteria andMinValueGreaterThanOrEqualTo(Long value) {
            addCriterion("MIN_VALUE >=", value, "minValue");
            return (Criteria) this;
        }

        public Criteria andMinValueLessThan(Long value) {
            addCriterion("MIN_VALUE <", value, "minValue");
            return (Criteria) this;
        }

        public Criteria andMinValueLessThanOrEqualTo(Long value) {
            addCriterion("MIN_VALUE <=", value, "minValue");
            return (Criteria) this;
        }

        public Criteria andMinValueIn(List<Long> values) {
            addCriterion("MIN_VALUE in", values, "minValue");
            return (Criteria) this;
        }

        public Criteria andMinValueNotIn(List<Long> values) {
            addCriterion("MIN_VALUE not in", values, "minValue");
            return (Criteria) this;
        }

        public Criteria andMinValueBetween(Long value1, Long value2) {
            addCriterion("MIN_VALUE between", value1, value2, "minValue");
            return (Criteria) this;
        }

        public Criteria andMinValueNotBetween(Long value1, Long value2) {
            addCriterion("MIN_VALUE not between", value1, value2, "minValue");
            return (Criteria) this;
        }

        public Criteria andMaxValueIsNull() {
            addCriterion("MAX_VALUE is null");
            return (Criteria) this;
        }

        public Criteria andMaxValueIsNotNull() {
            addCriterion("MAX_VALUE is not null");
            return (Criteria) this;
        }

        public Criteria andMaxValueEqualTo(Long value) {
            addCriterion("MAX_VALUE =", value, "maxValue");
            return (Criteria) this;
        }

        public Criteria andMaxValueNotEqualTo(Long value) {
            addCriterion("MAX_VALUE <>", value, "maxValue");
            return (Criteria) this;
        }

        public Criteria andMaxValueGreaterThan(Long value) {
            addCriterion("MAX_VALUE >", value, "maxValue");
            return (Criteria) this;
        }

        public Criteria andMaxValueGreaterThanOrEqualTo(Long value) {
            addCriterion("MAX_VALUE >=", value, "maxValue");
            return (Criteria) this;
        }

        public Criteria andMaxValueLessThan(Long value) {
            addCriterion("MAX_VALUE <", value, "maxValue");
            return (Criteria) this;
        }

        public Criteria andMaxValueLessThanOrEqualTo(Long value) {
            addCriterion("MAX_VALUE <=", value, "maxValue");
            return (Criteria) this;
        }

        public Criteria andMaxValueIn(List<Long> values) {
            addCriterion("MAX_VALUE in", values, "maxValue");
            return (Criteria) this;
        }

        public Criteria andMaxValueNotIn(List<Long> values) {
            addCriterion("MAX_VALUE not in", values, "maxValue");
            return (Criteria) this;
        }

        public Criteria andMaxValueBetween(Long value1, Long value2) {
            addCriterion("MAX_VALUE between", value1, value2, "maxValue");
            return (Criteria) this;
        }

        public Criteria andMaxValueNotBetween(Long value1, Long value2) {
            addCriterion("MAX_VALUE not between", value1, value2, "maxValue");
            return (Criteria) this;
        }

        public Criteria andIsCycleIsNull() {
            addCriterion("IS_CYCLE is null");
            return (Criteria) this;
        }

        public Criteria andIsCycleIsNotNull() {
            addCriterion("IS_CYCLE is not null");
            return (Criteria) this;
        }

        public Criteria andIsCycleEqualTo(Boolean value) {
            addCriterion("IS_CYCLE =", value, "isCycle");
            return (Criteria) this;
        }

        public Criteria andIsCycleNotEqualTo(Boolean value) {
            addCriterion("IS_CYCLE <>", value, "isCycle");
            return (Criteria) this;
        }

        public Criteria andIsCycleGreaterThan(Boolean value) {
            addCriterion("IS_CYCLE >", value, "isCycle");
            return (Criteria) this;
        }

        public Criteria andIsCycleGreaterThanOrEqualTo(Boolean value) {
            addCriterion("IS_CYCLE >=", value, "isCycle");
            return (Criteria) this;
        }

        public Criteria andIsCycleLessThan(Boolean value) {
            addCriterion("IS_CYCLE <", value, "isCycle");
            return (Criteria) this;
        }

        public Criteria andIsCycleLessThanOrEqualTo(Boolean value) {
            addCriterion("IS_CYCLE <=", value, "isCycle");
            return (Criteria) this;
        }

        public Criteria andIsCycleIn(List<Boolean> values) {
            addCriterion("IS_CYCLE in", values, "isCycle");
            return (Criteria) this;
        }

        public Criteria andIsCycleNotIn(List<Boolean> values) {
            addCriterion("IS_CYCLE not in", values, "isCycle");
            return (Criteria) this;
        }

        public Criteria andIsCycleBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_CYCLE between", value1, value2, "isCycle");
            return (Criteria) this;
        }

        public Criteria andIsCycleNotBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_CYCLE not between", value1, value2, "isCycle");
            return (Criteria) this;
        }

        public Criteria andIdIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "id");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SEQUENCES
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SEQUENCES
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}