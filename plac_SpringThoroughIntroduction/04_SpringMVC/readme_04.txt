★Spring徹底入門SpringFrameworkによるJavaアプリケーション開発.pdf
 - (CHAPTER 04) Spring MVC (P.163 - 202)
しおり　：P.
URL : 




//==========================================================================================================
// 4.1 Spring MVC とは
//==========================================================================================================
 - Model
 - View
 - Controller
   - フロントコントローラパターン

■4.1.1 webアプリケーションに開発における特徴
 - POJO（Plain	Old	Java	Object）での実装
 - アノテーションを使用した定義情報の指定 
 - 柔軟なメソッドシグネチャの定義 
 - Servlet	APIの抽象化 
 - Viewの実装技術の抽象化 
 - SpringのDIコンテナとの連携 


■4.1.2 MVCフレームワークとしての特徴
 - 豊富な拡張ポイントの提供 
 - エンタープライズアプリケーション向けの機能の提供 
 - サードパーティのライブラリとの連携部品の提供
   - Thymeleaf（テンプレートエンジン)
   - HDIV（セキュリティ強化)


//==========================================================================================================
// 4.2 はじめての Spring MVC アプリケーション
//==========================================================================================================
■4.2.1 開発プロジェクトの作成
P.168 ～
 - A.1 (P.718)を元にプロジェクト作成
   → エンコーディング

■4.2.2 Spring MVC の適用
 - ContextLoaderListener
 - タグライブラリ
   - /SpringMVC001/src/main/webapp/WEB-INF/view/include.jsp
 
 TODO：web.xmlなしでの設定

#################### P.174 ####################


■4.2.3 トップ画面表示処理の実装
 - /SpringMVC001/src/main/java/org/rhpj/controller/HelloController.java

■4.2.4 トップ画面表示処理の実装
■4.2.5 送信処理の実装
■4.2.6 入力チェック処理の実装
 - /SpringMVC001/src/main/java/org/rhpj/controller/EchoController.java


■4.2.7 XMLファイルを使用したBean定義
　TODO 省略




//==========================================================================================================
// 4.3  Spring MVC アーキテクチャ
//==========================================================================================================
■4.3.1 フレームワークのアーキテクチャ
 - フロントコントローラパターン
   - フロントコントローラの仕事
     - リクエスト受付
     - データ → Java変換
     - 入力チェック
     - Handler呼び出し
     - View解決
     - レスポンスデータ応答
     - 例外ハンドリング


■4.3.2 フロントコントローラのアーキテクチャ
 - DispatcherServletクラス（フロントコントローラ）
   → P.193の図と表
   
 - Handler
   - 要するにContollerのフレームワーク内での呼び方

 - HandlerMappiing
  - 実行する処理を選択する
 
 - HandlerAdapter
  - 選択された処理を呼び出す
  
 - ViewResolver
  - Handlerの返却値で、クライアントに返す View を決定する

 - View
  - レスポンスデータの生成


■4.3.3 DIコンテナとの連携
 - コンテキスト
   - アプリ用（親）
     - Service,repository,ORM
     - ライフサイクル（初期、利用、破棄）
       → P.201の図
   - サーブレット用（子）
     - HandlerMappingとか
   → P.199、P.200の図


//==========================================================================================================
//==========================================================================================================
// 問題
//==========================================================================================================

//==========================================================================================================
// 未整頓メモ
//==========================================================================================================
★ リスナーとは
 http://www.techscore.com/tech/Java/JavaEE/Servlet/7/



★ eclipse上でのエディタ関連づけ
  [環境設定]→[一般]→[コンテンツ・タイプ]→[テキスト]→[HTML]を選択して[追加]
  *.inc と入力して[OK]
  ファイルを開き直せばおk


★ 起動ポートの変更
 - /MyBootApp/src/main/resources/application.properties に以下を追記
   - server.port=8082



//==========================================================================================================
// <END>
//==========================================================================================================
